// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: items/items_model.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mruv {

  /// <summary>Holder for reflection information generated from items/items_model.proto</summary>
  public static partial class ItemsModelReflection {

    #region Descriptor
    /// <summary>File descriptor for items/items_model.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemsModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdpdGVtcy9pdGVtc19tb2RlbC5wcm90bxIEbXJ1dhoXdmFsaWRhdGUvdmFs",
            "aWRhdGUucHJvdG8inQEKCEl0ZW1UeXBlEhwKAmlkGAEgASgLMhAubXJ1di5J",
            "dGVtVHlwZUlEEgwKBG5hbWUYAiABKAkSEwoLZGVzY3JpcHRpb24YAyABKAkS",
            "EwoLYmFzZV93ZWlnaHQYBCABKAISEwoLYmFzZV92b2x1bWUYBSABKAISEgoK",
            "bW9kZWxfbmFtZRgGIAEoCRISCgptb2RlbF9oYXNoGAcgASgFIhgKCkl0ZW1U",
            "eXBlSUQSCgoCaWQYASABKA0iaAoESXRlbRIYCgJpZBgBIAEoCzIMLm1ydXYu",
            "SXRlbUlEEiYKDGl0ZW1fdHlwZV9pZBgCIAEoCzIQLm1ydXYuSXRlbVR5cGVJ",
            "RBIOCgZ3ZWlnaHQYAyABKAISDgoGdm9sdW1lGAQgASgCIhQKBkl0ZW1JRBIK",
            "CgJpZBgBIAEoBCLMAQoNQ29udGFpbmVyVHlwZRIhCgJpZBgBIAEoCzIVLm1y",
            "dXYuQ29udGFpbmVyVHlwZUlEEjAKFmNvbnRhaW5lcl9pdGVtX3R5cGVfaWQY",
            "AiABKAsyEC5tcnV2Lkl0ZW1UeXBlSUQSEgoKbWF4X251bWJlchgDIAEoDRIS",
            "CgptYXhfdm9sdW1lGAQgASgCEhIKCm1heF93ZWlnaHQYBSABKAISKgoQdmFs",
            "aWRfaXRlbV90eXBlcxgIIAMoCzIQLm1ydXYuSXRlbVR5cGVJRCIdCg9Db250",
            "YWluZXJUeXBlSUQSCgoCaWQYASABKA0iqAEKCUNvbnRhaW5lchIdCgJpZBgB",
            "IAEoCzIRLm1ydXYuQ29udGFpbmVySUQSJgoHdHlwZV9pZBgCIAEoCzIVLm1y",
            "dXYuQ29udGFpbmVyVHlwZUlEEh0KB2l0ZW1faWQYAyABKAsyDC5tcnV2Lkl0",
            "ZW1JRBIUCgxpdGVtc19pbnNpZGUYBCABKA0SHwoFaXRlbXMYBSADKAsyEC5t",
            "cnV2Lkluc2lkZUl0ZW0iGQoLQ29udGFpbmVySUQSCgoCaWQYASABKA0ikgEK",
            "Ckluc2lkZUl0ZW0SJwoMY29udGFpbmVyX2lkGAEgASgLMhEubXJ1di5Db250",
            "YWluZXJJRBIfCgdpdGVtX2lkGAIgASgLMgwubXJ1di5JdGVtSURIABIaCgRp",
            "dGVtGAMgASgLMgoubXJ1di5JdGVtSAASEAoIcG9zaXRpb24YBCABKAVCDAoK",
            "aXRlbV9vcl9pZEIlWiNnaXRodWIuY29tL01ydVYtUlAvbXJ1di1wYi1nby9p",
            "dGVtc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ItemType), global::Mruv.ItemType.Parser, new[]{ "Id", "Name", "Description", "BaseWeight", "BaseVolume", "ModelName", "ModelHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ItemTypeID), global::Mruv.ItemTypeID.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Item), global::Mruv.Item.Parser, new[]{ "Id", "ItemTypeId", "Weight", "Volume" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ItemID), global::Mruv.ItemID.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ContainerType), global::Mruv.ContainerType.Parser, new[]{ "Id", "ContainerItemTypeId", "MaxNumber", "MaxVolume", "MaxWeight", "ValidItemTypes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ContainerTypeID), global::Mruv.ContainerTypeID.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Container), global::Mruv.Container.Parser, new[]{ "Id", "TypeId", "ItemId", "ItemsInside", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ContainerID), global::Mruv.ContainerID.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.InsideItem), global::Mruv.InsideItem.Parser, new[]{ "ContainerId", "ItemId", "Item", "Position" }, new[]{ "ItemOrId" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///Item type data structure
  /// </summary>
  public sealed partial class ItemType : pb::IMessage<ItemType> {
    private static readonly pb::MessageParser<ItemType> _parser = new pb::MessageParser<ItemType>(() => new ItemType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemType(ItemType other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      baseWeight_ = other.baseWeight_;
      baseVolume_ = other.baseVolume_;
      modelName_ = other.modelName_;
      modelHash_ = other.modelHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemType Clone() {
      return new ItemType(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Mruv.ItemTypeID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.ItemTypeID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///Short name of item type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    ///Description of item type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base_weight" field.</summary>
    public const int BaseWeightFieldNumber = 4;
    private float baseWeight_;
    /// <summary>
    ///Default weight of items created with that item type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BaseWeight {
      get { return baseWeight_; }
      set {
        baseWeight_ = value;
      }
    }

    /// <summary>Field number for the "base_volume" field.</summary>
    public const int BaseVolumeFieldNumber = 5;
    private float baseVolume_;
    /// <summary>
    ///Default volume of items created with that item type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BaseVolume {
      get { return baseVolume_; }
      set {
        baseVolume_ = value;
      }
    }

    /// <summary>Field number for the "model_name" field.</summary>
    public const int ModelNameFieldNumber = 6;
    private string modelName_ = "";
    /// <summary>
    ///GTA V model name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_hash" field.</summary>
    public const int ModelHashFieldNumber = 7;
    private int modelHash_;
    /// <summary>
    ///GTA V model hash.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelHash {
      get { return modelHash_; }
      set {
        modelHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BaseWeight, other.BaseWeight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BaseVolume, other.BaseVolume)) return false;
      if (ModelName != other.ModelName) return false;
      if (ModelHash != other.ModelHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (BaseWeight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BaseWeight);
      if (BaseVolume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BaseVolume);
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (ModelHash != 0) hash ^= ModelHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (BaseWeight != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(BaseWeight);
      }
      if (BaseVolume != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(BaseVolume);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModelName);
      }
      if (ModelHash != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ModelHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (BaseWeight != 0F) {
        size += 1 + 4;
      }
      if (BaseVolume != 0F) {
        size += 1 + 4;
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (ModelHash != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemType other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Mruv.ItemTypeID();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.BaseWeight != 0F) {
        BaseWeight = other.BaseWeight;
      }
      if (other.BaseVolume != 0F) {
        BaseVolume = other.BaseVolume;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.ModelHash != 0) {
        ModelHash = other.ModelHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Mruv.ItemTypeID();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 37: {
            BaseWeight = input.ReadFloat();
            break;
          }
          case 45: {
            BaseVolume = input.ReadFloat();
            break;
          }
          case 50: {
            ModelName = input.ReadString();
            break;
          }
          case 56: {
            ModelHash = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Item type ID.
  /// </summary>
  public sealed partial class ItemTypeID : pb::IMessage<ItemTypeID> {
    private static readonly pb::MessageParser<ItemTypeID> _parser = new pb::MessageParser<ItemTypeID>(() => new ItemTypeID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemTypeID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemTypeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemTypeID(ItemTypeID other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemTypeID Clone() {
      return new ItemTypeID(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemTypeID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemTypeID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemTypeID other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Item data structure.
  /// </summary>
  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      itemTypeId_ = other.itemTypeId_ != null ? other.itemTypeId_.Clone() : null;
      weight_ = other.weight_;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Mruv.ItemID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.ItemID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "item_type_id" field.</summary>
    public const int ItemTypeIdFieldNumber = 2;
    private global::Mruv.ItemTypeID itemTypeId_;
    /// <summary>
    ///ID of an item type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.ItemTypeID ItemTypeId {
      get { return itemTypeId_; }
      set {
        itemTypeId_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 3;
    private float weight_;
    /// <summary>
    ///Current weight of the item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 4;
    private float volume_;
    /// <summary>
    ///Current volume of the item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(ItemTypeId, other.ItemTypeId)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Weight, other.Weight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (itemTypeId_ != null) hash ^= ItemTypeId.GetHashCode();
      if (Weight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Weight);
      if (Volume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Volume);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (itemTypeId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ItemTypeId);
      }
      if (Weight != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Weight);
      }
      if (Volume != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (itemTypeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemTypeId);
      }
      if (Weight != 0F) {
        size += 1 + 4;
      }
      if (Volume != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Mruv.ItemID();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.itemTypeId_ != null) {
        if (itemTypeId_ == null) {
          ItemTypeId = new global::Mruv.ItemTypeID();
        }
        ItemTypeId.MergeFrom(other.ItemTypeId);
      }
      if (other.Weight != 0F) {
        Weight = other.Weight;
      }
      if (other.Volume != 0F) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Mruv.ItemID();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (itemTypeId_ == null) {
              ItemTypeId = new global::Mruv.ItemTypeID();
            }
            input.ReadMessage(ItemTypeId);
            break;
          }
          case 29: {
            Weight = input.ReadFloat();
            break;
          }
          case 37: {
            Volume = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Item ID.
  /// </summary>
  public sealed partial class ItemID : pb::IMessage<ItemID> {
    private static readonly pb::MessageParser<ItemID> _parser = new pb::MessageParser<ItemID>(() => new ItemID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemID(ItemID other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemID Clone() {
      return new ItemID(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemID other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Container type data structure.
  /// </summary>
  public sealed partial class ContainerType : pb::IMessage<ContainerType> {
    private static readonly pb::MessageParser<ContainerType> _parser = new pb::MessageParser<ContainerType>(() => new ContainerType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContainerType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerType(ContainerType other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      containerItemTypeId_ = other.containerItemTypeId_ != null ? other.containerItemTypeId_.Clone() : null;
      maxNumber_ = other.maxNumber_;
      maxVolume_ = other.maxVolume_;
      maxWeight_ = other.maxWeight_;
      validItemTypes_ = other.validItemTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerType Clone() {
      return new ContainerType(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Mruv.ContainerTypeID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.ContainerTypeID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "container_item_type_id" field.</summary>
    public const int ContainerItemTypeIdFieldNumber = 2;
    private global::Mruv.ItemTypeID containerItemTypeId_;
    /// <summary>
    ///ID of an item type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.ItemTypeID ContainerItemTypeId {
      get { return containerItemTypeId_; }
      set {
        containerItemTypeId_ = value;
      }
    }

    /// <summary>Field number for the "max_number" field.</summary>
    public const int MaxNumberFieldNumber = 3;
    private uint maxNumber_;
    /// <summary>
    ///Max items in the container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxNumber {
      get { return maxNumber_; }
      set {
        maxNumber_ = value;
      }
    }

    /// <summary>Field number for the "max_volume" field.</summary>
    public const int MaxVolumeFieldNumber = 4;
    private float maxVolume_;
    /// <summary>
    ///Max volume of items in the container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxVolume {
      get { return maxVolume_; }
      set {
        maxVolume_ = value;
      }
    }

    /// <summary>Field number for the "max_weight" field.</summary>
    public const int MaxWeightFieldNumber = 5;
    private float maxWeight_;
    /// <summary>
    ///Max weight of items in the container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxWeight {
      get { return maxWeight_; }
      set {
        maxWeight_ = value;
      }
    }

    /// <summary>Field number for the "valid_item_types" field.</summary>
    public const int ValidItemTypesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Mruv.ItemTypeID> _repeated_validItemTypes_codec
        = pb::FieldCodec.ForMessage(66, global::Mruv.ItemTypeID.Parser);
    private readonly pbc::RepeatedField<global::Mruv.ItemTypeID> validItemTypes_ = new pbc::RepeatedField<global::Mruv.ItemTypeID>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mruv.ItemTypeID> ValidItemTypes {
      get { return validItemTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContainerType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContainerType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(ContainerItemTypeId, other.ContainerItemTypeId)) return false;
      if (MaxNumber != other.MaxNumber) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxVolume, other.MaxVolume)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxWeight, other.MaxWeight)) return false;
      if(!validItemTypes_.Equals(other.validItemTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (containerItemTypeId_ != null) hash ^= ContainerItemTypeId.GetHashCode();
      if (MaxNumber != 0) hash ^= MaxNumber.GetHashCode();
      if (MaxVolume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxVolume);
      if (MaxWeight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxWeight);
      hash ^= validItemTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (containerItemTypeId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContainerItemTypeId);
      }
      if (MaxNumber != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxNumber);
      }
      if (MaxVolume != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxVolume);
      }
      if (MaxWeight != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(MaxWeight);
      }
      validItemTypes_.WriteTo(output, _repeated_validItemTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (containerItemTypeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainerItemTypeId);
      }
      if (MaxNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxNumber);
      }
      if (MaxVolume != 0F) {
        size += 1 + 4;
      }
      if (MaxWeight != 0F) {
        size += 1 + 4;
      }
      size += validItemTypes_.CalculateSize(_repeated_validItemTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContainerType other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Mruv.ContainerTypeID();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.containerItemTypeId_ != null) {
        if (containerItemTypeId_ == null) {
          ContainerItemTypeId = new global::Mruv.ItemTypeID();
        }
        ContainerItemTypeId.MergeFrom(other.ContainerItemTypeId);
      }
      if (other.MaxNumber != 0) {
        MaxNumber = other.MaxNumber;
      }
      if (other.MaxVolume != 0F) {
        MaxVolume = other.MaxVolume;
      }
      if (other.MaxWeight != 0F) {
        MaxWeight = other.MaxWeight;
      }
      validItemTypes_.Add(other.validItemTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Mruv.ContainerTypeID();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (containerItemTypeId_ == null) {
              ContainerItemTypeId = new global::Mruv.ItemTypeID();
            }
            input.ReadMessage(ContainerItemTypeId);
            break;
          }
          case 24: {
            MaxNumber = input.ReadUInt32();
            break;
          }
          case 37: {
            MaxVolume = input.ReadFloat();
            break;
          }
          case 45: {
            MaxWeight = input.ReadFloat();
            break;
          }
          case 66: {
            validItemTypes_.AddEntriesFrom(input, _repeated_validItemTypes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Container type ID.
  /// </summary>
  public sealed partial class ContainerTypeID : pb::IMessage<ContainerTypeID> {
    private static readonly pb::MessageParser<ContainerTypeID> _parser = new pb::MessageParser<ContainerTypeID>(() => new ContainerTypeID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContainerTypeID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerTypeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerTypeID(ContainerTypeID other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerTypeID Clone() {
      return new ContainerTypeID(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContainerTypeID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContainerTypeID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContainerTypeID other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Container data structure.
  /// </summary>
  public sealed partial class Container : pb::IMessage<Container> {
    private static readonly pb::MessageParser<Container> _parser = new pb::MessageParser<Container>(() => new Container());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Container> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container(Container other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      typeId_ = other.typeId_ != null ? other.typeId_.Clone() : null;
      itemId_ = other.itemId_ != null ? other.itemId_.Clone() : null;
      itemsInside_ = other.itemsInside_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container Clone() {
      return new Container(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Mruv.ContainerID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.ContainerID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type_id" field.</summary>
    public const int TypeIdFieldNumber = 2;
    private global::Mruv.ContainerTypeID typeId_;
    /// <summary>
    ///ID of an container type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.ContainerTypeID TypeId {
      get { return typeId_; }
      set {
        typeId_ = value;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 3;
    private global::Mruv.ItemID itemId_;
    /// <summary>
    ///ID of container item representing container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.ItemID ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "items_inside" field.</summary>
    public const int ItemsInsideFieldNumber = 4;
    private uint itemsInside_;
    /// <summary>
    ///Number of items inside container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemsInside {
      get { return itemsInside_; }
      set {
        itemsInside_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Mruv.InsideItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(42, global::Mruv.InsideItem.Parser);
    private readonly pbc::RepeatedField<global::Mruv.InsideItem> items_ = new pbc::RepeatedField<global::Mruv.InsideItem>();
    /// <summary>
    ///List of items inside container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mruv.InsideItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Container);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Container other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(TypeId, other.TypeId)) return false;
      if (!object.Equals(ItemId, other.ItemId)) return false;
      if (ItemsInside != other.ItemsInside) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (typeId_ != null) hash ^= TypeId.GetHashCode();
      if (itemId_ != null) hash ^= ItemId.GetHashCode();
      if (ItemsInside != 0) hash ^= ItemsInside.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (typeId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TypeId);
      }
      if (itemId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ItemId);
      }
      if (ItemsInside != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ItemsInside);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (typeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeId);
      }
      if (itemId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemId);
      }
      if (ItemsInside != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemsInside);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Container other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Mruv.ContainerID();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.typeId_ != null) {
        if (typeId_ == null) {
          TypeId = new global::Mruv.ContainerTypeID();
        }
        TypeId.MergeFrom(other.TypeId);
      }
      if (other.itemId_ != null) {
        if (itemId_ == null) {
          ItemId = new global::Mruv.ItemID();
        }
        ItemId.MergeFrom(other.ItemId);
      }
      if (other.ItemsInside != 0) {
        ItemsInside = other.ItemsInside;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Mruv.ContainerID();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (typeId_ == null) {
              TypeId = new global::Mruv.ContainerTypeID();
            }
            input.ReadMessage(TypeId);
            break;
          }
          case 26: {
            if (itemId_ == null) {
              ItemId = new global::Mruv.ItemID();
            }
            input.ReadMessage(ItemId);
            break;
          }
          case 32: {
            ItemsInside = input.ReadUInt32();
            break;
          }
          case 42: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Container ID.
  /// </summary>
  public sealed partial class ContainerID : pb::IMessage<ContainerID> {
    private static readonly pb::MessageParser<ContainerID> _parser = new pb::MessageParser<ContainerID>(() => new ContainerID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContainerID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerID(ContainerID other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerID Clone() {
      return new ContainerID(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContainerID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContainerID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContainerID other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Item inside container data structure.
  /// </summary>
  public sealed partial class InsideItem : pb::IMessage<InsideItem> {
    private static readonly pb::MessageParser<InsideItem> _parser = new pb::MessageParser<InsideItem>(() => new InsideItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsideItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsideItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsideItem(InsideItem other) : this() {
      containerId_ = other.containerId_ != null ? other.containerId_.Clone() : null;
      position_ = other.position_;
      switch (other.ItemOrIdCase) {
        case ItemOrIdOneofCase.ItemId:
          ItemId = other.ItemId.Clone();
          break;
        case ItemOrIdOneofCase.Item:
          Item = other.Item.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsideItem Clone() {
      return new InsideItem(this);
    }

    /// <summary>Field number for the "container_id" field.</summary>
    public const int ContainerIdFieldNumber = 1;
    private global::Mruv.ContainerID containerId_;
    /// <summary>
    ///ID of container containing the item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.ContainerID ContainerId {
      get { return containerId_; }
      set {
        containerId_ = value;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.ItemID ItemId {
      get { return itemOrIdCase_ == ItemOrIdOneofCase.ItemId ? (global::Mruv.ItemID) itemOrId_ : null; }
      set {
        itemOrId_ = value;
        itemOrIdCase_ = value == null ? ItemOrIdOneofCase.None : ItemOrIdOneofCase.ItemId;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.Item Item {
      get { return itemOrIdCase_ == ItemOrIdOneofCase.Item ? (global::Mruv.Item) itemOrId_ : null; }
      set {
        itemOrId_ = value;
        itemOrIdCase_ = value == null ? ItemOrIdOneofCase.None : ItemOrIdOneofCase.Item;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private int position_;
    /// <summary>
    ///Position representing order in container. In ascending manner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    private object itemOrId_;
    /// <summary>Enum of possible cases for the "item_or_id" oneof.</summary>
    public enum ItemOrIdOneofCase {
      None = 0,
      ItemId = 2,
      Item = 3,
    }
    private ItemOrIdOneofCase itemOrIdCase_ = ItemOrIdOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemOrIdOneofCase ItemOrIdCase {
      get { return itemOrIdCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemOrId() {
      itemOrIdCase_ = ItemOrIdOneofCase.None;
      itemOrId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsideItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsideItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ContainerId, other.ContainerId)) return false;
      if (!object.Equals(ItemId, other.ItemId)) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (Position != other.Position) return false;
      if (ItemOrIdCase != other.ItemOrIdCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (containerId_ != null) hash ^= ContainerId.GetHashCode();
      if (itemOrIdCase_ == ItemOrIdOneofCase.ItemId) hash ^= ItemId.GetHashCode();
      if (itemOrIdCase_ == ItemOrIdOneofCase.Item) hash ^= Item.GetHashCode();
      if (Position != 0) hash ^= Position.GetHashCode();
      hash ^= (int) itemOrIdCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (containerId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ContainerId);
      }
      if (itemOrIdCase_ == ItemOrIdOneofCase.ItemId) {
        output.WriteRawTag(18);
        output.WriteMessage(ItemId);
      }
      if (itemOrIdCase_ == ItemOrIdOneofCase.Item) {
        output.WriteRawTag(26);
        output.WriteMessage(Item);
      }
      if (Position != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (containerId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainerId);
      }
      if (itemOrIdCase_ == ItemOrIdOneofCase.ItemId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemId);
      }
      if (itemOrIdCase_ == ItemOrIdOneofCase.Item) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (Position != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsideItem other) {
      if (other == null) {
        return;
      }
      if (other.containerId_ != null) {
        if (containerId_ == null) {
          ContainerId = new global::Mruv.ContainerID();
        }
        ContainerId.MergeFrom(other.ContainerId);
      }
      if (other.Position != 0) {
        Position = other.Position;
      }
      switch (other.ItemOrIdCase) {
        case ItemOrIdOneofCase.ItemId:
          if (ItemId == null) {
            ItemId = new global::Mruv.ItemID();
          }
          ItemId.MergeFrom(other.ItemId);
          break;
        case ItemOrIdOneofCase.Item:
          if (Item == null) {
            Item = new global::Mruv.Item();
          }
          Item.MergeFrom(other.Item);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (containerId_ == null) {
              ContainerId = new global::Mruv.ContainerID();
            }
            input.ReadMessage(ContainerId);
            break;
          }
          case 18: {
            global::Mruv.ItemID subBuilder = new global::Mruv.ItemID();
            if (itemOrIdCase_ == ItemOrIdOneofCase.ItemId) {
              subBuilder.MergeFrom(ItemId);
            }
            input.ReadMessage(subBuilder);
            ItemId = subBuilder;
            break;
          }
          case 26: {
            global::Mruv.Item subBuilder = new global::Mruv.Item();
            if (itemOrIdCase_ == ItemOrIdOneofCase.Item) {
              subBuilder.MergeFrom(Item);
            }
            input.ReadMessage(subBuilder);
            Item = subBuilder;
            break;
          }
          case 32: {
            Position = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
