// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: items/items_model.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mruv {

  /// <summary>Holder for reflection information generated from items/items_model.proto</summary>
  public static partial class ItemsModelReflection {

    #region Descriptor
    /// <summary>File descriptor for items/items_model.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemsModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdpdGVtcy9pdGVtc19tb2RlbC5wcm90bxIEbXJ1dhoUY29tbW9uL3NwYXRp",
            "YWwucHJvdG8imAEKCEl0ZW1UeXBlEgoKAmlkGAEgASgFEgwKBG5hbWUYAiAB",
            "KAkSEwoLZGVzY3JpcHRpb24YAyABKAkSEwoLYmFzZV93ZWlnaHQYBCABKAIS",
            "EwoLYmFzZV92b2x1bWUYBSABKAISFAoKbW9kZWxfbmFtZRgHIAEoCUgAEhQK",
            "Cm1vZGVsX2hhc2gYCCABKAVIAEIHCgVtb2RlbCIYCgpJdGVtVHlwZUlEEgoK",
            "AmlkGAEgASgFIkgKBEl0ZW0SCgoCaWQYASABKAMSFAoMaXRlbV90eXBlX2lk",
            "GAIgASgFEg4KBndlaWdodBgDIAEoAhIOCgZ2b2x1bWUYBCABKAIiFAoGSXRl",
            "bUlEEgoKAmlkGAEgASgDIpEBCg1Db250YWluZXJUeXBlEgoKAmlkGAEgASgF",
            "Eh4KFmNvbnRhaW5lcl9pdGVtX3R5cGVfaWQYAiABKAUSEgoKbWF4X251bWJl",
            "chgDIAEoBRISCgptYXhfdm9sdW1lGAQgASgCEhIKCm1heF93ZWlnaHQYBSAB",
            "KAISGAoQdmFsaWRfaXRlbV90eXBlcxgIIAMoBSJwCglDb250YWluZXISCgoC",
            "aWQYASABKAUSDwoHdHlwZV9pZBgCIAEoBRIPCgdpdGVtX2lkGAMgASgDEhQK",
            "DGl0ZW1zX2luc2lkZRgEIAEoBRIfCgVpdGVtcxgFIAMoCzIQLm1ydXYuSW5z",
            "aWRlSXRlbSIZCgtDb250YWluZXJJRBIKCgJpZBgBIAEoBSJ3CgpJbnNpZGVJ",
            "dGVtEhQKDGNvbnRhaW5lcl9pZBgBIAEoBRIPCgdpdGVtX2lkGAIgASgDEiAK",
            "CHBvc2l0aW9uGAMgASgLMg4ubXJ1di5Qb3NpdGlvbhIgCghyb3RhdGlvbhgE",
            "IAEoCzIOLm1ydXYuUm90YXRpb25CJVojZ2l0aHViLmNvbS9NcnVWLVJQL21y",
            "dXYtcGItZ28vaXRlbXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mruv.SpatialReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ItemType), global::Mruv.ItemType.Parser, new[]{ "Id", "Name", "Description", "BaseWeight", "BaseVolume", "ModelName", "ModelHash" }, new[]{ "Model" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ItemTypeID), global::Mruv.ItemTypeID.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Item), global::Mruv.Item.Parser, new[]{ "Id", "ItemTypeId", "Weight", "Volume" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ItemID), global::Mruv.ItemID.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ContainerType), global::Mruv.ContainerType.Parser, new[]{ "Id", "ContainerItemTypeId", "MaxNumber", "MaxVolume", "MaxWeight", "ValidItemTypes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Container), global::Mruv.Container.Parser, new[]{ "Id", "TypeId", "ItemId", "ItemsInside", "Items" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.ContainerID), global::Mruv.ContainerID.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.InsideItem), global::Mruv.InsideItem.Parser, new[]{ "ContainerId", "ItemId", "Position", "Rotation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ItemType : pb::IMessage<ItemType> {
    private static readonly pb::MessageParser<ItemType> _parser = new pb::MessageParser<ItemType>(() => new ItemType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemType(ItemType other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      baseWeight_ = other.baseWeight_;
      baseVolume_ = other.baseVolume_;
      switch (other.ModelCase) {
        case ModelOneofCase.ModelName:
          ModelName = other.ModelName;
          break;
        case ModelOneofCase.ModelHash:
          ModelHash = other.ModelHash;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemType Clone() {
      return new ItemType(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base_weight" field.</summary>
    public const int BaseWeightFieldNumber = 4;
    private float baseWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BaseWeight {
      get { return baseWeight_; }
      set {
        baseWeight_ = value;
      }
    }

    /// <summary>Field number for the "base_volume" field.</summary>
    public const int BaseVolumeFieldNumber = 5;
    private float baseVolume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BaseVolume {
      get { return baseVolume_; }
      set {
        baseVolume_ = value;
      }
    }

    /// <summary>Field number for the "model_name" field.</summary>
    public const int ModelNameFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelName {
      get { return modelCase_ == ModelOneofCase.ModelName ? (string) model_ : ""; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        modelCase_ = ModelOneofCase.ModelName;
      }
    }

    /// <summary>Field number for the "model_hash" field.</summary>
    public const int ModelHashFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModelHash {
      get { return modelCase_ == ModelOneofCase.ModelHash ? (int) model_ : 0; }
      set {
        model_ = value;
        modelCase_ = ModelOneofCase.ModelHash;
      }
    }

    private object model_;
    /// <summary>Enum of possible cases for the "model" oneof.</summary>
    public enum ModelOneofCase {
      None = 0,
      ModelName = 7,
      ModelHash = 8,
    }
    private ModelOneofCase modelCase_ = ModelOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelOneofCase ModelCase {
      get { return modelCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearModel() {
      modelCase_ = ModelOneofCase.None;
      model_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BaseWeight, other.BaseWeight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BaseVolume, other.BaseVolume)) return false;
      if (ModelName != other.ModelName) return false;
      if (ModelHash != other.ModelHash) return false;
      if (ModelCase != other.ModelCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (BaseWeight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BaseWeight);
      if (BaseVolume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BaseVolume);
      if (modelCase_ == ModelOneofCase.ModelName) hash ^= ModelName.GetHashCode();
      if (modelCase_ == ModelOneofCase.ModelHash) hash ^= ModelHash.GetHashCode();
      hash ^= (int) modelCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (BaseWeight != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(BaseWeight);
      }
      if (BaseVolume != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(BaseVolume);
      }
      if (modelCase_ == ModelOneofCase.ModelName) {
        output.WriteRawTag(58);
        output.WriteString(ModelName);
      }
      if (modelCase_ == ModelOneofCase.ModelHash) {
        output.WriteRawTag(64);
        output.WriteInt32(ModelHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (BaseWeight != 0F) {
        size += 1 + 4;
      }
      if (BaseVolume != 0F) {
        size += 1 + 4;
      }
      if (modelCase_ == ModelOneofCase.ModelName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (modelCase_ == ModelOneofCase.ModelHash) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemType other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.BaseWeight != 0F) {
        BaseWeight = other.BaseWeight;
      }
      if (other.BaseVolume != 0F) {
        BaseVolume = other.BaseVolume;
      }
      switch (other.ModelCase) {
        case ModelOneofCase.ModelName:
          ModelName = other.ModelName;
          break;
        case ModelOneofCase.ModelHash:
          ModelHash = other.ModelHash;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 37: {
            BaseWeight = input.ReadFloat();
            break;
          }
          case 45: {
            BaseVolume = input.ReadFloat();
            break;
          }
          case 58: {
            ModelName = input.ReadString();
            break;
          }
          case 64: {
            ModelHash = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemTypeID : pb::IMessage<ItemTypeID> {
    private static readonly pb::MessageParser<ItemTypeID> _parser = new pb::MessageParser<ItemTypeID>(() => new ItemTypeID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemTypeID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemTypeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemTypeID(ItemTypeID other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemTypeID Clone() {
      return new ItemTypeID(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemTypeID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemTypeID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemTypeID other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      id_ = other.id_;
      itemTypeId_ = other.itemTypeId_;
      weight_ = other.weight_;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "item_type_id" field.</summary>
    public const int ItemTypeIdFieldNumber = 2;
    private int itemTypeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemTypeId {
      get { return itemTypeId_; }
      set {
        itemTypeId_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 3;
    private float weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 4;
    private float volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ItemTypeId != other.ItemTypeId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Weight, other.Weight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (ItemTypeId != 0) hash ^= ItemTypeId.GetHashCode();
      if (Weight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Weight);
      if (Volume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Volume);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (ItemTypeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemTypeId);
      }
      if (Weight != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Weight);
      }
      if (Volume != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (ItemTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemTypeId);
      }
      if (Weight != 0F) {
        size += 1 + 4;
      }
      if (Volume != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.ItemTypeId != 0) {
        ItemTypeId = other.ItemTypeId;
      }
      if (other.Weight != 0F) {
        Weight = other.Weight;
      }
      if (other.Volume != 0F) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            ItemTypeId = input.ReadInt32();
            break;
          }
          case 29: {
            Weight = input.ReadFloat();
            break;
          }
          case 37: {
            Volume = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemID : pb::IMessage<ItemID> {
    private static readonly pb::MessageParser<ItemID> _parser = new pb::MessageParser<ItemID>(() => new ItemID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemID(ItemID other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemID Clone() {
      return new ItemID(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemID other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContainerType : pb::IMessage<ContainerType> {
    private static readonly pb::MessageParser<ContainerType> _parser = new pb::MessageParser<ContainerType>(() => new ContainerType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContainerType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerType(ContainerType other) : this() {
      id_ = other.id_;
      containerItemTypeId_ = other.containerItemTypeId_;
      maxNumber_ = other.maxNumber_;
      maxVolume_ = other.maxVolume_;
      maxWeight_ = other.maxWeight_;
      validItemTypes_ = other.validItemTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerType Clone() {
      return new ContainerType(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "container_item_type_id" field.</summary>
    public const int ContainerItemTypeIdFieldNumber = 2;
    private int containerItemTypeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContainerItemTypeId {
      get { return containerItemTypeId_; }
      set {
        containerItemTypeId_ = value;
      }
    }

    /// <summary>Field number for the "max_number" field.</summary>
    public const int MaxNumberFieldNumber = 3;
    private int maxNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxNumber {
      get { return maxNumber_; }
      set {
        maxNumber_ = value;
      }
    }

    /// <summary>Field number for the "max_volume" field.</summary>
    public const int MaxVolumeFieldNumber = 4;
    private float maxVolume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxVolume {
      get { return maxVolume_; }
      set {
        maxVolume_ = value;
      }
    }

    /// <summary>Field number for the "max_weight" field.</summary>
    public const int MaxWeightFieldNumber = 5;
    private float maxWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MaxWeight {
      get { return maxWeight_; }
      set {
        maxWeight_ = value;
      }
    }

    /// <summary>Field number for the "valid_item_types" field.</summary>
    public const int ValidItemTypesFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_validItemTypes_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> validItemTypes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ValidItemTypes {
      get { return validItemTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContainerType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContainerType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ContainerItemTypeId != other.ContainerItemTypeId) return false;
      if (MaxNumber != other.MaxNumber) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxVolume, other.MaxVolume)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxWeight, other.MaxWeight)) return false;
      if(!validItemTypes_.Equals(other.validItemTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ContainerItemTypeId != 0) hash ^= ContainerItemTypeId.GetHashCode();
      if (MaxNumber != 0) hash ^= MaxNumber.GetHashCode();
      if (MaxVolume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxVolume);
      if (MaxWeight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxWeight);
      hash ^= validItemTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ContainerItemTypeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ContainerItemTypeId);
      }
      if (MaxNumber != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxNumber);
      }
      if (MaxVolume != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxVolume);
      }
      if (MaxWeight != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(MaxWeight);
      }
      validItemTypes_.WriteTo(output, _repeated_validItemTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ContainerItemTypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContainerItemTypeId);
      }
      if (MaxNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNumber);
      }
      if (MaxVolume != 0F) {
        size += 1 + 4;
      }
      if (MaxWeight != 0F) {
        size += 1 + 4;
      }
      size += validItemTypes_.CalculateSize(_repeated_validItemTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContainerType other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ContainerItemTypeId != 0) {
        ContainerItemTypeId = other.ContainerItemTypeId;
      }
      if (other.MaxNumber != 0) {
        MaxNumber = other.MaxNumber;
      }
      if (other.MaxVolume != 0F) {
        MaxVolume = other.MaxVolume;
      }
      if (other.MaxWeight != 0F) {
        MaxWeight = other.MaxWeight;
      }
      validItemTypes_.Add(other.validItemTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ContainerItemTypeId = input.ReadInt32();
            break;
          }
          case 24: {
            MaxNumber = input.ReadInt32();
            break;
          }
          case 37: {
            MaxVolume = input.ReadFloat();
            break;
          }
          case 45: {
            MaxWeight = input.ReadFloat();
            break;
          }
          case 66:
          case 64: {
            validItemTypes_.AddEntriesFrom(input, _repeated_validItemTypes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Container : pb::IMessage<Container> {
    private static readonly pb::MessageParser<Container> _parser = new pb::MessageParser<Container>(() => new Container());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Container> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container(Container other) : this() {
      id_ = other.id_;
      typeId_ = other.typeId_;
      itemId_ = other.itemId_;
      itemsInside_ = other.itemsInside_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Container Clone() {
      return new Container(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type_id" field.</summary>
    public const int TypeIdFieldNumber = 2;
    private int typeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TypeId {
      get { return typeId_; }
      set {
        typeId_ = value;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 3;
    private long itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "items_inside" field.</summary>
    public const int ItemsInsideFieldNumber = 4;
    private int itemsInside_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemsInside {
      get { return itemsInside_; }
      set {
        itemsInside_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Mruv.InsideItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(42, global::Mruv.InsideItem.Parser);
    private readonly pbc::RepeatedField<global::Mruv.InsideItem> items_ = new pbc::RepeatedField<global::Mruv.InsideItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mruv.InsideItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Container);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Container other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TypeId != other.TypeId) return false;
      if (ItemId != other.ItemId) return false;
      if (ItemsInside != other.ItemsInside) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (TypeId != 0) hash ^= TypeId.GetHashCode();
      if (ItemId != 0L) hash ^= ItemId.GetHashCode();
      if (ItemsInside != 0) hash ^= ItemsInside.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TypeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TypeId);
      }
      if (ItemId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ItemId);
      }
      if (ItemsInside != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemsInside);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (TypeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TypeId);
      }
      if (ItemId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ItemId);
      }
      if (ItemsInside != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemsInside);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Container other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.TypeId != 0) {
        TypeId = other.TypeId;
      }
      if (other.ItemId != 0L) {
        ItemId = other.ItemId;
      }
      if (other.ItemsInside != 0) {
        ItemsInside = other.ItemsInside;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TypeId = input.ReadInt32();
            break;
          }
          case 24: {
            ItemId = input.ReadInt64();
            break;
          }
          case 32: {
            ItemsInside = input.ReadInt32();
            break;
          }
          case 42: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContainerID : pb::IMessage<ContainerID> {
    private static readonly pb::MessageParser<ContainerID> _parser = new pb::MessageParser<ContainerID>(() => new ContainerID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContainerID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerID(ContainerID other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContainerID Clone() {
      return new ContainerID(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContainerID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContainerID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContainerID other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsideItem : pb::IMessage<InsideItem> {
    private static readonly pb::MessageParser<InsideItem> _parser = new pb::MessageParser<InsideItem>(() => new InsideItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsideItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.ItemsModelReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsideItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsideItem(InsideItem other) : this() {
      containerId_ = other.containerId_;
      itemId_ = other.itemId_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsideItem Clone() {
      return new InsideItem(this);
    }

    /// <summary>Field number for the "container_id" field.</summary>
    public const int ContainerIdFieldNumber = 1;
    private int containerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContainerId {
      get { return containerId_; }
      set {
        containerId_ = value;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private long itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Mruv.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 4;
    private global::Mruv.Rotation rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.Rotation Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsideItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsideItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContainerId != other.ContainerId) return false;
      if (ItemId != other.ItemId) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContainerId != 0) hash ^= ContainerId.GetHashCode();
      if (ItemId != 0L) hash ^= ItemId.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContainerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ContainerId);
      }
      if (ItemId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ItemId);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContainerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContainerId);
      }
      if (ItemId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ItemId);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsideItem other) {
      if (other == null) {
        return;
      }
      if (other.ContainerId != 0) {
        ContainerId = other.ContainerId;
      }
      if (other.ItemId != 0L) {
        ItemId = other.ItemId;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Mruv.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::Mruv.Rotation();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ContainerId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt64();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Mruv.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 34: {
            if (rotation_ == null) {
              Rotation = new global::Mruv.Rotation();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
