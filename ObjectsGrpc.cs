// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: objects/objects.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Mruv.Gates {
  /// <summary>
  ///The MruV objects service provides procedures for game objects.
  /// </summary>
  public static partial class MruVObjectsService
  {
    static readonly string __ServiceName = "mruv.gates.MruVObjectsService";

    static readonly grpc::Marshaller<global::Mruv.Gates.CreateObjectModelRequest> __Marshaller_mruv_gates_CreateObjectModelRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.CreateObjectModelRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.CreateObjectModelResponse> __Marshaller_mruv_gates_CreateObjectModelResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.CreateObjectModelResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.GetObjectModelRequest> __Marshaller_mruv_gates_GetObjectModelRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.GetObjectModelRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.GetObjectModelResponse> __Marshaller_mruv_gates_GetObjectModelResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.GetObjectModelResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.UpdateObjectModelRequest> __Marshaller_mruv_gates_UpdateObjectModelRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.UpdateObjectModelRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.UpdateObjectModelResponse> __Marshaller_mruv_gates_UpdateObjectModelResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.UpdateObjectModelResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.DeleteObjectModelRequest> __Marshaller_mruv_gates_DeleteObjectModelRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.DeleteObjectModelRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.DeleteObjectModelResponse> __Marshaller_mruv_gates_DeleteObjectModelResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.DeleteObjectModelResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.CreateObjectRequest> __Marshaller_mruv_gates_CreateObjectRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.CreateObjectRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.CreateObjectResponse> __Marshaller_mruv_gates_CreateObjectResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.CreateObjectResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.GetObjectRequest> __Marshaller_mruv_gates_GetObjectRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.GetObjectRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.GetObjectResponse> __Marshaller_mruv_gates_GetObjectResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.GetObjectResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.UpdateObjectRequest> __Marshaller_mruv_gates_UpdateObjectRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.UpdateObjectRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.UpdateObjectResponse> __Marshaller_mruv_gates_UpdateObjectResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.UpdateObjectResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.DeleteObjectRequest> __Marshaller_mruv_gates_DeleteObjectRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.DeleteObjectRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Mruv.Gates.DeleteObjectResponse> __Marshaller_mruv_gates_DeleteObjectResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Mruv.Gates.DeleteObjectResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Mruv.Gates.CreateObjectModelRequest, global::Mruv.Gates.CreateObjectModelResponse> __Method_CreateObjectModel = new grpc::Method<global::Mruv.Gates.CreateObjectModelRequest, global::Mruv.Gates.CreateObjectModelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateObjectModel",
        __Marshaller_mruv_gates_CreateObjectModelRequest,
        __Marshaller_mruv_gates_CreateObjectModelResponse);

    static readonly grpc::Method<global::Mruv.Gates.GetObjectModelRequest, global::Mruv.Gates.GetObjectModelResponse> __Method_GetObjectModel = new grpc::Method<global::Mruv.Gates.GetObjectModelRequest, global::Mruv.Gates.GetObjectModelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetObjectModel",
        __Marshaller_mruv_gates_GetObjectModelRequest,
        __Marshaller_mruv_gates_GetObjectModelResponse);

    static readonly grpc::Method<global::Mruv.Gates.UpdateObjectModelRequest, global::Mruv.Gates.UpdateObjectModelResponse> __Method_UpdateObjectModel = new grpc::Method<global::Mruv.Gates.UpdateObjectModelRequest, global::Mruv.Gates.UpdateObjectModelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateObjectModel",
        __Marshaller_mruv_gates_UpdateObjectModelRequest,
        __Marshaller_mruv_gates_UpdateObjectModelResponse);

    static readonly grpc::Method<global::Mruv.Gates.DeleteObjectModelRequest, global::Mruv.Gates.DeleteObjectModelResponse> __Method_DeleteObjectModel = new grpc::Method<global::Mruv.Gates.DeleteObjectModelRequest, global::Mruv.Gates.DeleteObjectModelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteObjectModel",
        __Marshaller_mruv_gates_DeleteObjectModelRequest,
        __Marshaller_mruv_gates_DeleteObjectModelResponse);

    static readonly grpc::Method<global::Mruv.Gates.CreateObjectRequest, global::Mruv.Gates.CreateObjectResponse> __Method_CreateObject = new grpc::Method<global::Mruv.Gates.CreateObjectRequest, global::Mruv.Gates.CreateObjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateObject",
        __Marshaller_mruv_gates_CreateObjectRequest,
        __Marshaller_mruv_gates_CreateObjectResponse);

    static readonly grpc::Method<global::Mruv.Gates.GetObjectRequest, global::Mruv.Gates.GetObjectResponse> __Method_GetObject = new grpc::Method<global::Mruv.Gates.GetObjectRequest, global::Mruv.Gates.GetObjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetObject",
        __Marshaller_mruv_gates_GetObjectRequest,
        __Marshaller_mruv_gates_GetObjectResponse);

    static readonly grpc::Method<global::Mruv.Gates.UpdateObjectRequest, global::Mruv.Gates.UpdateObjectResponse> __Method_UpdateObject = new grpc::Method<global::Mruv.Gates.UpdateObjectRequest, global::Mruv.Gates.UpdateObjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateObject",
        __Marshaller_mruv_gates_UpdateObjectRequest,
        __Marshaller_mruv_gates_UpdateObjectResponse);

    static readonly grpc::Method<global::Mruv.Gates.DeleteObjectRequest, global::Mruv.Gates.DeleteObjectResponse> __Method_DeleteObject = new grpc::Method<global::Mruv.Gates.DeleteObjectRequest, global::Mruv.Gates.DeleteObjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteObject",
        __Marshaller_mruv_gates_DeleteObjectRequest,
        __Marshaller_mruv_gates_DeleteObjectResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Mruv.Gates.ObjectsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MruVObjectsService</summary>
    [grpc::BindServiceMethod(typeof(MruVObjectsService), "BindService")]
    public abstract partial class MruVObjectsServiceBase
    {
      /// <summary>
      /// Create an object model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Mruv.Gates.CreateObjectModelResponse> CreateObjectModel(global::Mruv.Gates.CreateObjectModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get an object model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Mruv.Gates.GetObjectModelResponse> GetObjectModel(global::Mruv.Gates.GetObjectModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update an object model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Mruv.Gates.UpdateObjectModelResponse> UpdateObjectModel(global::Mruv.Gates.UpdateObjectModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an object model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Mruv.Gates.DeleteObjectModelResponse> DeleteObjectModel(global::Mruv.Gates.DeleteObjectModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create an object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Mruv.Gates.CreateObjectResponse> CreateObject(global::Mruv.Gates.CreateObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get an object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Mruv.Gates.GetObjectResponse> GetObject(global::Mruv.Gates.GetObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update an object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Mruv.Gates.UpdateObjectResponse> UpdateObject(global::Mruv.Gates.UpdateObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Mruv.Gates.DeleteObjectResponse> DeleteObject(global::Mruv.Gates.DeleteObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MruVObjectsService</summary>
    public partial class MruVObjectsServiceClient : grpc::ClientBase<MruVObjectsServiceClient>
    {
      /// <summary>Creates a new client for MruVObjectsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MruVObjectsServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MruVObjectsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MruVObjectsServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MruVObjectsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MruVObjectsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Create an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.CreateObjectModelResponse CreateObjectModel(global::Mruv.Gates.CreateObjectModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateObjectModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.CreateObjectModelResponse CreateObjectModel(global::Mruv.Gates.CreateObjectModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateObjectModel, null, options, request);
      }
      /// <summary>
      /// Create an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.CreateObjectModelResponse> CreateObjectModelAsync(global::Mruv.Gates.CreateObjectModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateObjectModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.CreateObjectModelResponse> CreateObjectModelAsync(global::Mruv.Gates.CreateObjectModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateObjectModel, null, options, request);
      }
      /// <summary>
      /// Get an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.GetObjectModelResponse GetObjectModel(global::Mruv.Gates.GetObjectModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.GetObjectModelResponse GetObjectModel(global::Mruv.Gates.GetObjectModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetObjectModel, null, options, request);
      }
      /// <summary>
      /// Get an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.GetObjectModelResponse> GetObjectModelAsync(global::Mruv.Gates.GetObjectModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.GetObjectModelResponse> GetObjectModelAsync(global::Mruv.Gates.GetObjectModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetObjectModel, null, options, request);
      }
      /// <summary>
      /// Update an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.UpdateObjectModelResponse UpdateObjectModel(global::Mruv.Gates.UpdateObjectModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateObjectModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.UpdateObjectModelResponse UpdateObjectModel(global::Mruv.Gates.UpdateObjectModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateObjectModel, null, options, request);
      }
      /// <summary>
      /// Update an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.UpdateObjectModelResponse> UpdateObjectModelAsync(global::Mruv.Gates.UpdateObjectModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateObjectModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.UpdateObjectModelResponse> UpdateObjectModelAsync(global::Mruv.Gates.UpdateObjectModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateObjectModel, null, options, request);
      }
      /// <summary>
      /// Delete an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.DeleteObjectModelResponse DeleteObjectModel(global::Mruv.Gates.DeleteObjectModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteObjectModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.DeleteObjectModelResponse DeleteObjectModel(global::Mruv.Gates.DeleteObjectModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteObjectModel, null, options, request);
      }
      /// <summary>
      /// Delete an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.DeleteObjectModelResponse> DeleteObjectModelAsync(global::Mruv.Gates.DeleteObjectModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteObjectModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an object model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.DeleteObjectModelResponse> DeleteObjectModelAsync(global::Mruv.Gates.DeleteObjectModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteObjectModel, null, options, request);
      }
      /// <summary>
      /// Create an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.CreateObjectResponse CreateObject(global::Mruv.Gates.CreateObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.CreateObjectResponse CreateObject(global::Mruv.Gates.CreateObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateObject, null, options, request);
      }
      /// <summary>
      /// Create an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.CreateObjectResponse> CreateObjectAsync(global::Mruv.Gates.CreateObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.CreateObjectResponse> CreateObjectAsync(global::Mruv.Gates.CreateObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateObject, null, options, request);
      }
      /// <summary>
      /// Get an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.GetObjectResponse GetObject(global::Mruv.Gates.GetObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.GetObjectResponse GetObject(global::Mruv.Gates.GetObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetObject, null, options, request);
      }
      /// <summary>
      /// Get an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.GetObjectResponse> GetObjectAsync(global::Mruv.Gates.GetObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.GetObjectResponse> GetObjectAsync(global::Mruv.Gates.GetObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetObject, null, options, request);
      }
      /// <summary>
      /// Update an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.UpdateObjectResponse UpdateObject(global::Mruv.Gates.UpdateObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.UpdateObjectResponse UpdateObject(global::Mruv.Gates.UpdateObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateObject, null, options, request);
      }
      /// <summary>
      /// Update an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.UpdateObjectResponse> UpdateObjectAsync(global::Mruv.Gates.UpdateObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.UpdateObjectResponse> UpdateObjectAsync(global::Mruv.Gates.UpdateObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateObject, null, options, request);
      }
      /// <summary>
      /// Delete an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.DeleteObjectResponse DeleteObject(global::Mruv.Gates.DeleteObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Mruv.Gates.DeleteObjectResponse DeleteObject(global::Mruv.Gates.DeleteObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteObject, null, options, request);
      }
      /// <summary>
      /// Delete an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.DeleteObjectResponse> DeleteObjectAsync(global::Mruv.Gates.DeleteObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Mruv.Gates.DeleteObjectResponse> DeleteObjectAsync(global::Mruv.Gates.DeleteObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteObject, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MruVObjectsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MruVObjectsServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MruVObjectsServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateObjectModel, serviceImpl.CreateObjectModel)
          .AddMethod(__Method_GetObjectModel, serviceImpl.GetObjectModel)
          .AddMethod(__Method_UpdateObjectModel, serviceImpl.UpdateObjectModel)
          .AddMethod(__Method_DeleteObjectModel, serviceImpl.DeleteObjectModel)
          .AddMethod(__Method_CreateObject, serviceImpl.CreateObject)
          .AddMethod(__Method_GetObject, serviceImpl.GetObject)
          .AddMethod(__Method_UpdateObject, serviceImpl.UpdateObject)
          .AddMethod(__Method_DeleteObject, serviceImpl.DeleteObject).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MruVObjectsServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateObjectModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Mruv.Gates.CreateObjectModelRequest, global::Mruv.Gates.CreateObjectModelResponse>(serviceImpl.CreateObjectModel));
      serviceBinder.AddMethod(__Method_GetObjectModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Mruv.Gates.GetObjectModelRequest, global::Mruv.Gates.GetObjectModelResponse>(serviceImpl.GetObjectModel));
      serviceBinder.AddMethod(__Method_UpdateObjectModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Mruv.Gates.UpdateObjectModelRequest, global::Mruv.Gates.UpdateObjectModelResponse>(serviceImpl.UpdateObjectModel));
      serviceBinder.AddMethod(__Method_DeleteObjectModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Mruv.Gates.DeleteObjectModelRequest, global::Mruv.Gates.DeleteObjectModelResponse>(serviceImpl.DeleteObjectModel));
      serviceBinder.AddMethod(__Method_CreateObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Mruv.Gates.CreateObjectRequest, global::Mruv.Gates.CreateObjectResponse>(serviceImpl.CreateObject));
      serviceBinder.AddMethod(__Method_GetObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Mruv.Gates.GetObjectRequest, global::Mruv.Gates.GetObjectResponse>(serviceImpl.GetObject));
      serviceBinder.AddMethod(__Method_UpdateObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Mruv.Gates.UpdateObjectRequest, global::Mruv.Gates.UpdateObjectResponse>(serviceImpl.UpdateObject));
      serviceBinder.AddMethod(__Method_DeleteObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Mruv.Gates.DeleteObjectRequest, global::Mruv.Gates.DeleteObjectResponse>(serviceImpl.DeleteObject));
    }

  }
}
#endregion
