// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: objects/movable.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mruv.Objects {

  /// <summary>Holder for reflection information generated from objects/movable.proto</summary>
  public static partial class MovableReflection {

    #region Descriptor
    /// <summary>File descriptor for objects/movable.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MovableReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVvYmplY3RzL21vdmFibGUucHJvdG8SDG1ydXYub2JqZWN0cxocZ29vZ2xl",
            "L2FwaS9hbm5vdGF0aW9ucy5wcm90bxoVb2JqZWN0cy9vYmplY3RzLnByb3Rv",
            "IloKBVN0YXRlEgwKBG5hbWUYASABKAkSCQoBeBgCIAEoAhIJCgF5GAMgASgC",
            "EgkKAXoYBCABKAISCgoCcngYBSABKAISCgoCcnkYBiABKAISCgoCcnoYByAB",
            "KAIiWgoNTW92YWJsZU9iamVjdBIkCgZvYmplY3QYASABKAsyFC5tcnV2Lm9i",
            "amVjdHMuT2JqZWN0EiMKBnN0YXRlcxgCIAMoCzITLm1ydXYub2JqZWN0cy5T",
            "dGF0ZSJnChpDcmVhdGVNb3ZhYmxlT2JqZWN0UmVxdWVzdBIkCgZvYmplY3QY",
            "ASABKAsyFC5tcnV2Lm9iamVjdHMuT2JqZWN0EiMKBnN0YXRlcxgCIAMoCzIT",
            "Lm1ydXYub2JqZWN0cy5TdGF0ZSIpChtDcmVhdGVNb3ZhYmxlT2JqZWN0UmVz",
            "cG9uc2USCgoCaWQYASABKA0iJQoXR2V0TW92YWJsZU9iamVjdFJlcXVlc3QS",
            "CgoCaWQYASABKA0imwEKGEdldE1vdmFibGVPYmplY3RSZXNwb25zZRIkCgZv",
            "YmplY3QYASABKAsyFC5tcnV2Lm9iamVjdHMuT2JqZWN0EiMKBnN0YXRlcxgC",
            "IAMoCzITLm1ydXYub2JqZWN0cy5TdGF0ZRIYChBjdXJyZW50X3N0YXRlX2lk",
            "GAMgASgNEhoKEmN1cnJlbnRfc3RhdGVfbmFtZRgEIAEoCSJgChpVcGRhdGVN",
            "b3ZhYmxlT2JqZWN0UmVxdWVzdBIKCgJpZBgBIAEoDRIRCglvYmplY3RfaWQY",
            "AiABKA0SIwoGc3RhdGVzGAMgAygLMhMubXJ1di5vYmplY3RzLlN0YXRlIh0K",
            "G1VwZGF0ZU1vdmFibGVPYmplY3RSZXNwb25zZSIoChpEZWxldGVNb3ZhYmxl",
            "T2JqZWN0UmVxdWVzdBIKCgJpZBgBIAEoDSIdChtEZWxldGVNb3ZhYmxlT2Jq",
            "ZWN0UmVzcG9uc2UiIgoRTW92ZU9iamVjdFJlcXVlc3QSDQoFc3RhdGUYASAB",
            "KA0iFAoSTW92ZU9iamVjdFJlc3BvbnNlIiMKFU1vdmVPYmplY3ROZXh0UmVx",
            "dWVzdBIKCgJpZBgBIAEoDSI+ChZNb3ZlT2JqZWN0TmV4dFJlc3BvbnNlEhAK",
            "CHN0YXRlX2lkGAEgASgNEhIKCnN0YXRlX25hbWUYAiABKAkiJwoZTW92ZU9i",
            "amVjdFByZXZpb3VzUmVxdWVzdBIKCgJpZBgBIAEoDSJCChpNb3ZlT2JqZWN0",
            "UHJldmlvdXNSZXNwb25zZRIQCghzdGF0ZV9pZBgBIAEoDRISCgpzdGF0ZV9u",
            "YW1lGAIgASgJMsIHChlNcnVWTW92YWJsZU9iamVjdHNTZXJ2aWNlEoYBChND",
            "cmVhdGVNb3ZhYmxlT2JqZWN0EigubXJ1di5vYmplY3RzLkNyZWF0ZU1vdmFi",
            "bGVPYmplY3RSZXF1ZXN0GikubXJ1di5vYmplY3RzLkNyZWF0ZU1vdmFibGVP",
            "YmplY3RSZXNwb25zZSIagtPkkwIUIhIvdjEvbW92YWJsZU9iamVjdHMSfQoQ",
            "R2V0TW92YWJsZU9iamVjdBIlLm1ydXYub2JqZWN0cy5HZXRNb3ZhYmxlT2Jq",
            "ZWN0UmVxdWVzdBomLm1ydXYub2JqZWN0cy5HZXRNb3ZhYmxlT2JqZWN0UmVz",
            "cG9uc2UiGoLT5JMCFBISL3YxL21vdmFibGVPYmplY3RzEoYBChNVcGRhdGVN",
            "b3ZhYmxlT2JqZWN0EigubXJ1di5vYmplY3RzLlVwZGF0ZU1vdmFibGVPYmpl",
            "Y3RSZXF1ZXN0GikubXJ1di5vYmplY3RzLlVwZGF0ZU1vdmFibGVPYmplY3RS",
            "ZXNwb25zZSIagtPkkwIUMhIvdjEvbW92YWJsZU9iamVjdHMShgEKE0RlbGV0",
            "ZU1vdmFibGVPYmplY3QSKC5tcnV2Lm9iamVjdHMuRGVsZXRlTW92YWJsZU9i",
            "amVjdFJlcXVlc3QaKS5tcnV2Lm9iamVjdHMuRGVsZXRlTW92YWJsZU9iamVj",
            "dFJlc3BvbnNlIhqC0+STAhQqEi92MS9tb3ZhYmxlT2JqZWN0cxJxCgpNb3Zl",
            "T2JqZWN0Eh8ubXJ1di5vYmplY3RzLk1vdmVPYmplY3RSZXF1ZXN0GiAubXJ1",
            "di5vYmplY3RzLk1vdmVPYmplY3RSZXNwb25zZSIggtPkkwIaIhgvdjEvbW92",
            "YWJsZU9iamVjdHMvbW92ZXMSggEKDk1vdmVPYmplY3ROZXh0EiMubXJ1di5v",
            "YmplY3RzLk1vdmVPYmplY3ROZXh0UmVxdWVzdBokLm1ydXYub2JqZWN0cy5N",
            "b3ZlT2JqZWN0TmV4dFJlc3BvbnNlIiWC0+STAh8iHS92MS9tb3ZhYmxlT2Jq",
            "ZWN0cy9tb3Zlcy9uZXh0EpIBChJNb3ZlT2JqZWN0UHJldmlvdXMSJy5tcnV2",
            "Lm9iamVjdHMuTW92ZU9iamVjdFByZXZpb3VzUmVxdWVzdBooLm1ydXYub2Jq",
            "ZWN0cy5Nb3ZlT2JqZWN0UHJldmlvdXNSZXNwb25zZSIpgtPkkwIjIiEvdjEv",
            "bW92YWJsZU9iamVjdHMvbW92ZXMvcHJldmlvdXNCJ1olZ2l0aHViLmNvbS9N",
            "cnVWLVJQL21ydXYtcGItZ28vb2JqZWN0c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Mruv.Objects.ObjectsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.State), global::Mruv.Objects.State.Parser, new[]{ "Name", "X", "Y", "Z", "Rx", "Ry", "Rz" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.MovableObject), global::Mruv.Objects.MovableObject.Parser, new[]{ "Object", "States" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.CreateMovableObjectRequest), global::Mruv.Objects.CreateMovableObjectRequest.Parser, new[]{ "Object", "States" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.CreateMovableObjectResponse), global::Mruv.Objects.CreateMovableObjectResponse.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.GetMovableObjectRequest), global::Mruv.Objects.GetMovableObjectRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.GetMovableObjectResponse), global::Mruv.Objects.GetMovableObjectResponse.Parser, new[]{ "Object", "States", "CurrentStateId", "CurrentStateName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.UpdateMovableObjectRequest), global::Mruv.Objects.UpdateMovableObjectRequest.Parser, new[]{ "Id", "ObjectId", "States" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.UpdateMovableObjectResponse), global::Mruv.Objects.UpdateMovableObjectResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.DeleteMovableObjectRequest), global::Mruv.Objects.DeleteMovableObjectRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.DeleteMovableObjectResponse), global::Mruv.Objects.DeleteMovableObjectResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.MoveObjectRequest), global::Mruv.Objects.MoveObjectRequest.Parser, new[]{ "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.MoveObjectResponse), global::Mruv.Objects.MoveObjectResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.MoveObjectNextRequest), global::Mruv.Objects.MoveObjectNextRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.MoveObjectNextResponse), global::Mruv.Objects.MoveObjectNextResponse.Parser, new[]{ "StateId", "StateName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.MoveObjectPreviousRequest), global::Mruv.Objects.MoveObjectPreviousRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mruv.Objects.MoveObjectPreviousResponse), global::Mruv.Objects.MoveObjectPreviousResponse.Parser, new[]{ "StateId", "StateName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Position and rotation state of moving object.
  /// </summary>
  public sealed partial class State : pb::IMessage<State> {
    private static readonly pb::MessageParser<State> _parser = new pb::MessageParser<State>(() => new State());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<State> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public State() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public State(State other) : this() {
      name_ = other.name_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      rx_ = other.rx_;
      ry_ = other.ry_;
      rz_ = other.rz_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public State Clone() {
      return new State(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 4;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "rx" field.</summary>
    public const int RxFieldNumber = 5;
    private float rx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Rx {
      get { return rx_; }
      set {
        rx_ = value;
      }
    }

    /// <summary>Field number for the "ry" field.</summary>
    public const int RyFieldNumber = 6;
    private float ry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Ry {
      get { return ry_; }
      set {
        ry_ = value;
      }
    }

    /// <summary>Field number for the "rz" field.</summary>
    public const int RzFieldNumber = 7;
    private float rz_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Rz {
      get { return rz_; }
      set {
        rz_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as State);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(State other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rx, other.Rx)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ry, other.Ry)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rz, other.Rz)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (Rx != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rx);
      if (Ry != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ry);
      if (Rz != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rz);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Z);
      }
      if (Rx != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Rx);
      }
      if (Ry != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Ry);
      }
      if (Rz != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Rz);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (Rx != 0F) {
        size += 1 + 4;
      }
      if (Ry != 0F) {
        size += 1 + 4;
      }
      if (Rz != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(State other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.Rx != 0F) {
        Rx = other.Rx;
      }
      if (other.Ry != 0F) {
        Ry = other.Ry;
      }
      if (other.Rz != 0F) {
        Rz = other.Rz;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 37: {
            Z = input.ReadFloat();
            break;
          }
          case 45: {
            Rx = input.ReadFloat();
            break;
          }
          case 53: {
            Ry = input.ReadFloat();
            break;
          }
          case 61: {
            Rz = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A movable object.
  /// </summary>
  public sealed partial class MovableObject : pb::IMessage<MovableObject> {
    private static readonly pb::MessageParser<MovableObject> _parser = new pb::MessageParser<MovableObject>(() => new MovableObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MovableObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovableObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovableObject(MovableObject other) : this() {
      object_ = other.object_ != null ? other.object_.Clone() : null;
      states_ = other.states_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MovableObject Clone() {
      return new MovableObject(this);
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 1;
    private global::Mruv.Objects.Object object_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.Objects.Object Object {
      get { return object_; }
      set {
        object_ = value;
      }
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mruv.Objects.State> _repeated_states_codec
        = pb::FieldCodec.ForMessage(18, global::Mruv.Objects.State.Parser);
    private readonly pbc::RepeatedField<global::Mruv.Objects.State> states_ = new pbc::RepeatedField<global::Mruv.Objects.State>();
    /// <summary>
    /// List of states that an object can take.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mruv.Objects.State> States {
      get { return states_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MovableObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MovableObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Object, other.Object)) return false;
      if(!states_.Equals(other.states_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (object_ != null) hash ^= Object.GetHashCode();
      hash ^= states_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (object_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Object);
      }
      states_.WriteTo(output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (object_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
      }
      size += states_.CalculateSize(_repeated_states_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MovableObject other) {
      if (other == null) {
        return;
      }
      if (other.object_ != null) {
        if (object_ == null) {
          Object = new global::Mruv.Objects.Object();
        }
        Object.MergeFrom(other.Object);
      }
      states_.Add(other.states_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (object_ == null) {
              Object = new global::Mruv.Objects.Object();
            }
            input.ReadMessage(Object);
            break;
          }
          case 18: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for rpc `CreateMovableObject`.
  /// </summary>
  public sealed partial class CreateMovableObjectRequest : pb::IMessage<CreateMovableObjectRequest> {
    private static readonly pb::MessageParser<CreateMovableObjectRequest> _parser = new pb::MessageParser<CreateMovableObjectRequest>(() => new CreateMovableObjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateMovableObjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMovableObjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMovableObjectRequest(CreateMovableObjectRequest other) : this() {
      object_ = other.object_ != null ? other.object_.Clone() : null;
      states_ = other.states_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMovableObjectRequest Clone() {
      return new CreateMovableObjectRequest(this);
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 1;
    private global::Mruv.Objects.Object object_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.Objects.Object Object {
      get { return object_; }
      set {
        object_ = value;
      }
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mruv.Objects.State> _repeated_states_codec
        = pb::FieldCodec.ForMessage(18, global::Mruv.Objects.State.Parser);
    private readonly pbc::RepeatedField<global::Mruv.Objects.State> states_ = new pbc::RepeatedField<global::Mruv.Objects.State>();
    /// <summary>
    /// List of states that an object can take.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mruv.Objects.State> States {
      get { return states_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateMovableObjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateMovableObjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Object, other.Object)) return false;
      if(!states_.Equals(other.states_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (object_ != null) hash ^= Object.GetHashCode();
      hash ^= states_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (object_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Object);
      }
      states_.WriteTo(output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (object_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
      }
      size += states_.CalculateSize(_repeated_states_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateMovableObjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.object_ != null) {
        if (object_ == null) {
          Object = new global::Mruv.Objects.Object();
        }
        Object.MergeFrom(other.Object);
      }
      states_.Add(other.states_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (object_ == null) {
              Object = new global::Mruv.Objects.Object();
            }
            input.ReadMessage(Object);
            break;
          }
          case 18: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for rpc `CreateMovableObject`.
  /// </summary>
  public sealed partial class CreateMovableObjectResponse : pb::IMessage<CreateMovableObjectResponse> {
    private static readonly pb::MessageParser<CreateMovableObjectResponse> _parser = new pb::MessageParser<CreateMovableObjectResponse>(() => new CreateMovableObjectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateMovableObjectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMovableObjectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMovableObjectResponse(CreateMovableObjectResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMovableObjectResponse Clone() {
      return new CreateMovableObjectResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateMovableObjectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateMovableObjectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateMovableObjectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for rpc `GetMovableObject`.
  /// </summary>
  public sealed partial class GetMovableObjectRequest : pb::IMessage<GetMovableObjectRequest> {
    private static readonly pb::MessageParser<GetMovableObjectRequest> _parser = new pb::MessageParser<GetMovableObjectRequest>(() => new GetMovableObjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMovableObjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMovableObjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMovableObjectRequest(GetMovableObjectRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMovableObjectRequest Clone() {
      return new GetMovableObjectRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMovableObjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMovableObjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMovableObjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for rpc `GetMovableObject`.
  /// </summary>
  public sealed partial class GetMovableObjectResponse : pb::IMessage<GetMovableObjectResponse> {
    private static readonly pb::MessageParser<GetMovableObjectResponse> _parser = new pb::MessageParser<GetMovableObjectResponse>(() => new GetMovableObjectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMovableObjectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMovableObjectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMovableObjectResponse(GetMovableObjectResponse other) : this() {
      object_ = other.object_ != null ? other.object_.Clone() : null;
      states_ = other.states_.Clone();
      currentStateId_ = other.currentStateId_;
      currentStateName_ = other.currentStateName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMovableObjectResponse Clone() {
      return new GetMovableObjectResponse(this);
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 1;
    private global::Mruv.Objects.Object object_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mruv.Objects.Object Object {
      get { return object_; }
      set {
        object_ = value;
      }
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mruv.Objects.State> _repeated_states_codec
        = pb::FieldCodec.ForMessage(18, global::Mruv.Objects.State.Parser);
    private readonly pbc::RepeatedField<global::Mruv.Objects.State> states_ = new pbc::RepeatedField<global::Mruv.Objects.State>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mruv.Objects.State> States {
      get { return states_; }
    }

    /// <summary>Field number for the "current_state_id" field.</summary>
    public const int CurrentStateIdFieldNumber = 3;
    private uint currentStateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CurrentStateId {
      get { return currentStateId_; }
      set {
        currentStateId_ = value;
      }
    }

    /// <summary>Field number for the "current_state_name" field.</summary>
    public const int CurrentStateNameFieldNumber = 4;
    private string currentStateName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentStateName {
      get { return currentStateName_; }
      set {
        currentStateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMovableObjectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMovableObjectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Object, other.Object)) return false;
      if(!states_.Equals(other.states_)) return false;
      if (CurrentStateId != other.CurrentStateId) return false;
      if (CurrentStateName != other.CurrentStateName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (object_ != null) hash ^= Object.GetHashCode();
      hash ^= states_.GetHashCode();
      if (CurrentStateId != 0) hash ^= CurrentStateId.GetHashCode();
      if (CurrentStateName.Length != 0) hash ^= CurrentStateName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (object_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Object);
      }
      states_.WriteTo(output, _repeated_states_codec);
      if (CurrentStateId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(CurrentStateId);
      }
      if (CurrentStateName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CurrentStateName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (object_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
      }
      size += states_.CalculateSize(_repeated_states_codec);
      if (CurrentStateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrentStateId);
      }
      if (CurrentStateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentStateName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMovableObjectResponse other) {
      if (other == null) {
        return;
      }
      if (other.object_ != null) {
        if (object_ == null) {
          Object = new global::Mruv.Objects.Object();
        }
        Object.MergeFrom(other.Object);
      }
      states_.Add(other.states_);
      if (other.CurrentStateId != 0) {
        CurrentStateId = other.CurrentStateId;
      }
      if (other.CurrentStateName.Length != 0) {
        CurrentStateName = other.CurrentStateName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (object_ == null) {
              Object = new global::Mruv.Objects.Object();
            }
            input.ReadMessage(Object);
            break;
          }
          case 18: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
          case 24: {
            CurrentStateId = input.ReadUInt32();
            break;
          }
          case 34: {
            CurrentStateName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for rpc `UpdateMovableObject`.
  /// </summary>
  public sealed partial class UpdateMovableObjectRequest : pb::IMessage<UpdateMovableObjectRequest> {
    private static readonly pb::MessageParser<UpdateMovableObjectRequest> _parser = new pb::MessageParser<UpdateMovableObjectRequest>(() => new UpdateMovableObjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMovableObjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMovableObjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMovableObjectRequest(UpdateMovableObjectRequest other) : this() {
      id_ = other.id_;
      objectId_ = other.objectId_;
      states_ = other.states_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMovableObjectRequest Clone() {
      return new UpdateMovableObjectRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private uint objectId_;
    /// <summary>
    /// 0 for no changes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Mruv.Objects.State> _repeated_states_codec
        = pb::FieldCodec.ForMessage(26, global::Mruv.Objects.State.Parser);
    private readonly pbc::RepeatedField<global::Mruv.Objects.State> states_ = new pbc::RepeatedField<global::Mruv.Objects.State>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mruv.Objects.State> States {
      get { return states_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMovableObjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMovableObjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ObjectId != other.ObjectId) return false;
      if(!states_.Equals(other.states_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ObjectId != 0) hash ^= ObjectId.GetHashCode();
      hash ^= states_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (ObjectId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ObjectId);
      }
      states_.WriteTo(output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (ObjectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      size += states_.CalculateSize(_repeated_states_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMovableObjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ObjectId != 0) {
        ObjectId = other.ObjectId;
      }
      states_.Add(other.states_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 26: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for rpc `UpdateMovableObject`.
  /// </summary>
  public sealed partial class UpdateMovableObjectResponse : pb::IMessage<UpdateMovableObjectResponse> {
    private static readonly pb::MessageParser<UpdateMovableObjectResponse> _parser = new pb::MessageParser<UpdateMovableObjectResponse>(() => new UpdateMovableObjectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMovableObjectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMovableObjectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMovableObjectResponse(UpdateMovableObjectResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMovableObjectResponse Clone() {
      return new UpdateMovableObjectResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMovableObjectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMovableObjectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMovableObjectResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Request message for rpc `DeleteMovableObject`.
  /// </summary>
  public sealed partial class DeleteMovableObjectRequest : pb::IMessage<DeleteMovableObjectRequest> {
    private static readonly pb::MessageParser<DeleteMovableObjectRequest> _parser = new pb::MessageParser<DeleteMovableObjectRequest>(() => new DeleteMovableObjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteMovableObjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMovableObjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMovableObjectRequest(DeleteMovableObjectRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMovableObjectRequest Clone() {
      return new DeleteMovableObjectRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteMovableObjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteMovableObjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteMovableObjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for rpc `DeleteMovableObject`.
  /// </summary>
  public sealed partial class DeleteMovableObjectResponse : pb::IMessage<DeleteMovableObjectResponse> {
    private static readonly pb::MessageParser<DeleteMovableObjectResponse> _parser = new pb::MessageParser<DeleteMovableObjectResponse>(() => new DeleteMovableObjectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteMovableObjectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMovableObjectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMovableObjectResponse(DeleteMovableObjectResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMovableObjectResponse Clone() {
      return new DeleteMovableObjectResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteMovableObjectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteMovableObjectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteMovableObjectResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Request message for rpc `MoveObject`.
  /// </summary>
  public sealed partial class MoveObjectRequest : pb::IMessage<MoveObjectRequest> {
    private static readonly pb::MessageParser<MoveObjectRequest> _parser = new pb::MessageParser<MoveObjectRequest>(() => new MoveObjectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveObjectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectRequest(MoveObjectRequest other) : this() {
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectRequest Clone() {
      return new MoveObjectRequest(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private uint state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveObjectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveObjectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveObjectRequest other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for rpc `MoveObject`.
  /// </summary>
  public sealed partial class MoveObjectResponse : pb::IMessage<MoveObjectResponse> {
    private static readonly pb::MessageParser<MoveObjectResponse> _parser = new pb::MessageParser<MoveObjectResponse>(() => new MoveObjectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveObjectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectResponse(MoveObjectResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectResponse Clone() {
      return new MoveObjectResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveObjectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveObjectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveObjectResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Request message for rpc `MoveObjectNext`.
  /// </summary>
  public sealed partial class MoveObjectNextRequest : pb::IMessage<MoveObjectNextRequest> {
    private static readonly pb::MessageParser<MoveObjectNextRequest> _parser = new pb::MessageParser<MoveObjectNextRequest>(() => new MoveObjectNextRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveObjectNextRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectNextRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectNextRequest(MoveObjectNextRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectNextRequest Clone() {
      return new MoveObjectNextRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveObjectNextRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveObjectNextRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveObjectNextRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for rpc `MoveObjectNext`.
  /// </summary>
  public sealed partial class MoveObjectNextResponse : pb::IMessage<MoveObjectNextResponse> {
    private static readonly pb::MessageParser<MoveObjectNextResponse> _parser = new pb::MessageParser<MoveObjectNextResponse>(() => new MoveObjectNextResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveObjectNextResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectNextResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectNextResponse(MoveObjectNextResponse other) : this() {
      stateId_ = other.stateId_;
      stateName_ = other.stateName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectNextResponse Clone() {
      return new MoveObjectNextResponse(this);
    }

    /// <summary>Field number for the "state_id" field.</summary>
    public const int StateIdFieldNumber = 1;
    private uint stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "state_name" field.</summary>
    public const int StateNameFieldNumber = 2;
    private string stateName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StateName {
      get { return stateName_; }
      set {
        stateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveObjectNextResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveObjectNextResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StateId != other.StateId) return false;
      if (StateName != other.StateName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (StateName.Length != 0) hash ^= StateName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StateId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StateId);
      }
      if (StateName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StateName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StateId);
      }
      if (StateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveObjectNextResponse other) {
      if (other == null) {
        return;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.StateName.Length != 0) {
        StateName = other.StateName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StateId = input.ReadUInt32();
            break;
          }
          case 18: {
            StateName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for rpc `MoveObjectPrevious`.
  /// </summary>
  public sealed partial class MoveObjectPreviousRequest : pb::IMessage<MoveObjectPreviousRequest> {
    private static readonly pb::MessageParser<MoveObjectPreviousRequest> _parser = new pb::MessageParser<MoveObjectPreviousRequest>(() => new MoveObjectPreviousRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveObjectPreviousRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectPreviousRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectPreviousRequest(MoveObjectPreviousRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectPreviousRequest Clone() {
      return new MoveObjectPreviousRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveObjectPreviousRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveObjectPreviousRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveObjectPreviousRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for rpc `MoveObjectPrevious`.
  /// </summary>
  public sealed partial class MoveObjectPreviousResponse : pb::IMessage<MoveObjectPreviousResponse> {
    private static readonly pb::MessageParser<MoveObjectPreviousResponse> _parser = new pb::MessageParser<MoveObjectPreviousResponse>(() => new MoveObjectPreviousResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveObjectPreviousResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mruv.Objects.MovableReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectPreviousResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectPreviousResponse(MoveObjectPreviousResponse other) : this() {
      stateId_ = other.stateId_;
      stateName_ = other.stateName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveObjectPreviousResponse Clone() {
      return new MoveObjectPreviousResponse(this);
    }

    /// <summary>Field number for the "state_id" field.</summary>
    public const int StateIdFieldNumber = 1;
    private uint stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "state_name" field.</summary>
    public const int StateNameFieldNumber = 2;
    private string stateName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StateName {
      get { return stateName_; }
      set {
        stateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveObjectPreviousResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveObjectPreviousResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StateId != other.StateId) return false;
      if (StateName != other.StateName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (StateName.Length != 0) hash ^= StateName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StateId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StateId);
      }
      if (StateName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StateName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StateId);
      }
      if (StateName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveObjectPreviousResponse other) {
      if (other == null) {
        return;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.StateName.Length != 0) {
        StateName = other.StateName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StateId = input.ReadUInt32();
            break;
          }
          case 18: {
            StateName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
